"""
Django settings for p_notification_rapi project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv


# reading .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False #if os.getenv("MODE").lower() == "PROD" else os.getenv("DJANGO_DEBUG")

ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS")

# Application definition

INSTALLED_APPS = [
    'admin_interface',
    'colorfield',
    'import_export',
    # 'multi_captcha_admin',
    'admin_honeypot',
    # 'request',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'debug_toolbar',
    'defender',
    'lockdown',
    'loginas',
    'cuser',
    # Your APPS GOES HERE
    'a_notification_rapi',
    'rest_framework',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'defender.middleware.FailedLoginMiddleware',
    # 'request.middleware.RequestMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'lockdown.middleware.LockdownMiddleware',
    # Your Middleware Goes Here
]

ROOT_URLCONF = 'p_notification_rapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'p_notification_rapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': str(os.path.join(BASE_DIR, 'db.sqlite3')),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/api/static/'

STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, "static"),
    # os.path.join(BASE_DIR, "ui", "static"),
]

# PROJECT_ROOT_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
PROJECT_ROOT_DIR = os.path.dirname(os.path.abspath("requirements.txt"))
STATIC_ROOT = os.path.join(PROJECT_ROOT_DIR, "staticfiles")
print('STATIC_ROOT(static collection path): ', STATIC_ROOT)

# MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_ROOT = os.path.join(PROJECT_ROOT_DIR, "mediafiles")
MEDIA_URL = "/api/media/"

# Application custom configuration
AUTH_HOST = os.environ.get("AUTH_HOST")


# django-multi-captcha-admin

RECAPTCHA_PUBLIC_KEY = os.environ.get("RECAPTCHA_PUBLIC_KEY", '')
RECAPTCHA_PRIVATE_KEY = os.environ.get("RECAPTCHA_PRIVATE_KEY", '')

MULTI_CAPTCHA_ADMIN = {
    'engine': 'recaptcha2',
}

# django-debug-toolbar

# The Debug Toolbar is shown only if your IP address is listed in the INTERNAL_IPS setting.

INTERNAL_IPS = os.environ.get("INTERNAL_IPS", '127.0.0.1').split(" ")
# [
#     # ...
#     '127.0.0.1',
#     # ...
# ]

DEFENDER_REDIS_URL = os.environ.get("DEFENDER_REDIS_URL", 'redis://localhost:6379/0')
DEFENDER_COOLOFF_TIME = 600 # seconds

# django-lockdown

if os.getenv("LOCKDOWN_PASSWORDS"):
    LOCKDOWN_PASSWORDS = tuple(os.getenv("LOCKDOWN_PASSWORDS").split(" "))


LOCKDOWN_ENABLED = os.getenv("LOCKDOWN_ENABLED", False)

#django-object-tools
SERIALIZATION_MODULES = {
    'csv': 'export.serializers.csv_serializer'
}

#django-admin-interface
X_FRAME_OPTIONS='SAMEORIGIN'


#django-logins

# This will only allow admins to log in as other users:
CAN_LOGIN_AS = lambda request, target_user: request.user.is_superuser

#django-import-export
IMPORT_EXPORT_USE_TRANSACTIONS = True

#django-username-email 
AUTH_USER_MODEL = 'cuser.CUser'

CELERY_BROKER_URL = 'amqp://localhost'

EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT", 587)
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS", True)


#AUTH HOST
AUTH_HOST = os.getenv("AUTH_HOST")
CRM_HOST = os.getenv("CRM_HOST")

#### REST FRAMEWORK STUFF #####
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        "authentication.APIAuthentication"
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
        "a_notification_rapi.permissions.GlobalViewPermission"
    ],
    'DEFAULT_FILTER_BACKENDS' : ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS' : 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE' : 10
}


# Celery conf
# CELERY_BROKER_URL = os.getenv('CELERY_BROKER_URL', 'amqp://rabbitmq')

# Celery conf
CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0' #also tried localhost and
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0' #also tried without the '/0'
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'America/Argentina/Buenos_Aires'

# CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL")
# CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND")
# CELERY_ACCEPT_CONTENT = os.getenv("CELERY_ACCEPT_CONTENT")
# CELERY_TASK_SERIALIZER = os.getenv("CELERY_TASK_SERIALIZER")
# CELERY_RESULT_SERIALIZER = os.getenv("CELERY_RESULT_SERIALIZER")
# CELERY_TIMEZONE = os.getenv("CELERY_TIMEZONE")

# Celery conf for redis
# CELERY_BROKER_URL = 'redis://redis:6379/0'
# CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
MS_NAME = os.getenv("MS_NAME")